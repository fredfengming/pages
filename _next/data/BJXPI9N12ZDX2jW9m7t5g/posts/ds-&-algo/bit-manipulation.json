{"pageProps":{"post":{"path":"ds-&-algo/bit-manipulation","title":"位操作","excerpt":"二进制位的相关概念，运算操作和算法例题","dateIsoString":"2024-02-03T00:00:00.000Z","coverImagePath":"/assets/posts/ds-&-algo/bit-manipulation.cover.jpg","content":"\n## 概念\n\n- 反码：原值取反后的值，成为原值的反码。\n- 补码：原值的反码再＋ 1\n- 负数用补码表示\n  - -1 的二进制全是 1111111\n  - 5 = 101（前缀全是 0)\n  - -5 = 011（前缀全是 1）\n\n## 位的功能操作\n\n|                   功能                    | 操作                          |\n| :---------------------------------------: | :---------------------------- |\n|                   除 2                    | &gt;&gt;                      |\n|                   乘 2                    | &lt;&lt;                      |\n|               正负符号变换                | 取反再+1                      |\n|           从 a 中消去 b 中的 1            | a &= ~b（和 b 的反，做&运算） |\n|                取最右的 1                 | n & -n                        |\n|                删最右的 1                 | x & x-1                       |\n| n \\|= n >> 1; n \\|= n >> 2; n \\|= n >> 4; | 第一个 1 右侧的 bit 置为 1    |\n\n## Java 位运算符\n\n|     符号     |    描述    | 运算规则                                               |\n| :----------: | :--------: | :----------------------------------------------------- |\n|      &       |     与     | 两个位都为 1 时，结果才为 1                            |\n|      \\|      |     或     | 两个位都为 0 时，结果才为 0                            |\n|      ^       |    异或    | 两个位相同为 0，相异为 1                               |\n|      ~       |    取反    | 0 变 1，1 变 0                                         |\n|   &lt;&lt;   |    左移    | 高位丢弃，低位补 0                                     |\n|   &gt;&gt;   |    右移    | 无符号数高位补 0；有符号数编译器有的补符号位，有的补 0 |\n| &gt;&gt;&gt; | 无符号右移 | Java 运算，高位补 0                                    |\n\n## 例题\n\n> 一堆数字中，有 2 个数字各出现一次，其它都出现两次。[Leetcode](https://leetcode.com/problems/single-number-iii/submissions/)\n\n解题重点：\n\n- one ^ two = xor\n- xor & -xor => one 和 two 的第一个差异位\n- 用差异位可以辨别一个数字可能是 one 还是 two\n"},"recentPostLinks":[{"text":"位操作","href":"/posts/ds-&-algo/bit-manipulation"},{"text":"并查集(Disjoint Set)学习笔记","href":"/posts/ds-&-algo/disjoint-set"},{"text":"排序算法学习笔记","href":"/posts/ds-&-algo/sort"},{"text":"Mermaid","href":"/posts/mermaid"},{"text":"Binary Indexed Tree","href":"/posts/ds-&-algo/binary-indexed-tree"},{"text":"动态规划例题","href":"/posts/ds-&-algo/dp"},{"text":"Trie","href":"/posts/ds-&-algo/trie"}],"utilLinks":[{"text":"Docker Command Builder","href":"/tools/docker"},{"text":"Kubectl Command Builder","href":"/tools/kubectl"}]},"__N_SSG":true}