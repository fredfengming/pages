{"pageProps":{"post":{"path":"ds-&-algo/dp","title":"动态规划例题","excerpt":"","dateIsoString":"2020-03-16T05:35:07.322Z","coverImagePath":null,"content":"\n## 动态规划例题\n\n## 例题\n\n### 双向动态规划，找二维矩阵求最近的 0 的距离。[Leetcode link](https://leetcode.com/problems/01-matrix/)\n\n从左上来一次，从右下再来一次，得到每个非 0cell 最近的 0 的距离。\n\n### Longest Common Substring(LCS) 问题\n\n求两个字符串的最长子字符串（子字符串中的字符不必在原串中连续，但先后顺序必须和原串一致）\n\n```\nif (last char same)\n    LCS(*A, *B) = LCS(*，*)+1\nelse\n    LCS(*A, *B) = Max(LCS(*A, *),LCS(*, *B))\n```\n"},"recentPostLinks":[{"text":"位操作","href":"/posts/ds-&-algo/bit-manipulation"},{"text":"并查集(Disjoint Set)学习笔记","href":"/posts/ds-&-algo/disjoint-set"},{"text":"排序算法学习笔记","href":"/posts/ds-&-algo/sort"},{"text":"Mermaid","href":"/posts/mermaid"},{"text":"Binary Indexed Tree","href":"/posts/ds-&-algo/binary-indexed-tree"},{"text":"动态规划例题","href":"/posts/ds-&-algo/dp"},{"text":"Trie","href":"/posts/ds-&-algo/trie"}],"utilLinks":[{"text":"Docker Command Builder","href":"/tools/docker"},{"text":"Kubectl Command Builder","href":"/tools/kubectl"}]},"__N_SSG":true}